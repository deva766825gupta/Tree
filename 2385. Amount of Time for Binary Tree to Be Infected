/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans=0;
    int depth(TreeNode*root, int start){
        if(!root) return 0;
        
        int left=depth(root->left,start);
        int right=depth(root->right,start);

        if(root->val==start){
            ans=max(left,right);
            return -1;
        }
        if(left>=0 && right>=0)
            return 1+max(left,right);
        if(left<0){
            ans=max(ans,abs(left)+right);
            return left-1;
        }
        ans=max(ans,abs(right)+left);
        return right-1;  

    }
    int amountOfTime(TreeNode* root, int start) {
        ans=0;
        depth(root,start);
        return ans;
    }
};
