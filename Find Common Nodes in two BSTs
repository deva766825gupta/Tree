 public:
    void inorder(Node* root,vector<int> &v)
    {
        if(!root)
        {
            return ;
        }
        inorder(root->left,v);
        v.push_back(root->data);
        inorder(root->right,v);
    }
    //Function to find the nodes that are common in both BST. 
    vector <int> findCommon(Node *root1, Node *root2)
    {
     //Your code here
     vector<int> v1,v2;
     inorder(root1,v1);
     inorder(root2,v2);
     vector<int> ans;
     if(v1.size()<v2.size())
     {
         swap(v1,v2);
     }
     int i=0;
     int j=0;
     while(i<v1.size() && j<v2.size())
     {
         if(v1[i]==v2[j])
         {
             ans.push_back(v1[i]);
             i++;
           
             j++;
         }
          else if(v2[j] > v1[i]){
                while(v2[j]>v1[i] && i<v1.size()){
                    i++;
                }
            }
            else{
                j++;
            }
     }
     return ans;
     
     
    }
